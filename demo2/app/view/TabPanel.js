/*
 * File: app/view/TabPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('demo2.view.TabPanel', {
    extend: 'Ext.tab.Panel',

    config: {
        items: [
            {
                xtype: 'container',
                title: 'Ficheros',
                layout: {
                    type: 'card'
                },
                items: [
                    {
                        xtype: 'dataview',
                        ui: '',
                        itemTpl: [
                            '<div>{display_name}<br>',
                            '     Coordenadas (lat,lon): {lat}, {lon}',
                            '</div>',
                            ''
                        ],
                        loadingText: 'Cargando...',
                        store: 'OSMStore'
                    }
                ]
            },
            {
                xtype: 'container',
                title: 'Mapa',
                ui: '',
                layout: {
                    type: 'card'
                },
                items: [
                    {
                        xtype: 'map',
                        itemId: 'mymap2',
                        mapOptions: {
                            zoom: 9
                        },
                        useCurrentLocation: true
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMapMaprender',
                event: 'maprender',
                delegate: '#mymap2'
            }
        ]
    },

    onMapMaprender: function(map, gmap, eOpts) {
        //Obtengo el Store
        var store = Ext.getStore("OSMStore");

        //Cargo el store y luego lo recorro una vez cargado
        store.load(function(){

            store.each(function(registro) { 
                //Para cada elemento del store
                //Creo una posici칩n a partir de la latitud y la longitud            
                var posicion = new google.maps.LatLng(registro.get("lat"),registro.get("lon"));
                //Creo un marcador con la posici칩n y todos los datos del registro
                var marker=new google.maps.Marker({
                    position: posicion,
                    pico: registro
                });
                //Hago el marcador seleccionable
                marker.setClickable(true);
                //A침ado el evento on mouseup para que salga el popup
                google.maps.event.addListener(marker, 'mouseup', function() {
                    var pico = this.pico;
                    var content = '<span style="font-weight: bold">'+ pico.get('display_name') + '</span>';
                    if (!map.infoWindow) {
                        map.infoWindow = new google.maps.InfoWindow(); //
                    }
                    map.infoWindow.setContent(content);
                    map.infoWindow.open(gmap, this);
                });
                //A침ado el marcador al mapa
                marker.setMap(gmap);
            });
        });
    }

});